stages:
- build
- test
- deploy

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/singuerinc-works/com.singuerinc.www:$CI_BUILD_TAG
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/singuerinc-works/com.singuerinc.www:latest

.test-build: &test-build-definition
  image: jekyll/jekyll:3.2.1
  stage: build
  artifacts:
    expire_in: 20 minutes
    untracked: true
  script:
  - apk add --update nodejs
  - npm install
  - npm run build
  - jekyll build -d $TRAVIS_BUILD_DIR

.test-urls: &test-urls-definition
  image: jekyll/jekyll:3.2.1
  stage: test
  script:
  - htmlproofer $TRAVIS_BUILD_DIR --log-level debug

.test-functional: &test-functional-definition
  image: singuerinc/docker_casperjs
  stage: test
  script:
  - echo "0.0.0.0 jekyll" >> /etc/hosts
  - cd $CI_PROJECT_DIR/public
  - python -m SimpleHTTPServer 4000 &
  - casperjs test $CI_PROJECT_DIR/_tests/index.js

.test-deploy: &test-deploy-definition:
  image: mhart/alpine-node:6
  stage: deploy
  script:
  - npm install -g surge
  - surge -p $TRAVIS_BUILD_DIR -d $DEST_DOMAIN




test:build:
  <<: *test-build-definition
  environment: test
  only:
  - branches
  except:
  - master

test:test:urls:
  <<: *test-urls-definition
  environment: test
  only:
  - branches
  except:
  - master

test:test:functional:
  <<: *test-functional-definition
  environment: test
  only:
  - branches
  except:
  - master

test:deploy:
  <<: *test-deploy-definition
  environment: test
  variables:
    DEST_DOMAIN: $TEST_DOMAIN
  only:
  - branches
  except:
  - master

staging:build:
  <<: *test-build-definition
  environment: staging
  only:
  - master

staging:test:urls:
  <<: *test-urls-definition
  environment: staging
  only:
  - master

staging:test:functional:
  <<: *test-functional-definition
  environment: staging
  only:
  - master

staging:deploy:
  <<: *test-deploy-definition
  environment: staging
  variables:
    DEST_DOMAIN: $STAGING_DOMAIN
  only:
  - master

pages:build:
  <<: *test-build-definition
  environment: production
  only:
  - tags

pages:test:urls:
  <<: *test-urls-definition
  environment: production
  only:
  - tags

pages:test:functional:
  <<: *test-functional-definition
  environment: production
  only:
  - tags

pages:
  image: ruby:2.1
  environment: production
  stage: deploy
  script:
  - gem install redcarpet jekyll jekyll-sitemap
  - jekyll build -d public
  artifacts:
    paths:
    - public
  only:
  - tags

pages:push-docker-images:
  image: docker:git
  services:
  - docker:dind
  environment: production
  stage: deploy
  script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker build -t $CONTAINER_TEST_IMAGE .
  - docker push $CONTAINER_TEST_IMAGE
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
  - docker push $CONTAINER_RELEASE_IMAGE
  only:
  - tags
